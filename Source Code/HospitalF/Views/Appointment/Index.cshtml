@using HospitalF.Constant
@model HospitalF.Models.AppointmentModels

@using Recaptcha.Web.Mvc;
@{
    ViewBag.Title = "Đặt lịch hẹn";
}

@Scripts.Render("~/bundles/smartadminjquery")
<script src="~/Content/js/plugin/masked-input/jquery.maskedinput.min.js" type="text/javascript"></script>
@* Captcha Ajax API*@
<script type="text/javascript" src="http://www.google.com/recaptcha/api/js/recaptcha_ajax.js"></script>
<script type="text/javascript">
    function setNotification(message, type) {
        // Success
        if (type == 1) {
            notif({
                msg: message,
                type: "success",
                width: 600,
                position: "center",
                fade: true,
                multiline: true
            });
        }

        // Warning
        if (type == 2) {
            notif({
                msg: message,
                type: "warning",
                width: 600,
                position: "center",
                fade: true,
                multiline: true
            });
        }

        // Error
        if (type == 3) {
            notif({
                msg: message,
                type: "error",
                width: 600,
                position: "center",
                fade: true,
                multiline: true
            });
        }
    }

    @*Display notification*@
    @*function displayNotification() {
        // Add hospital
        if (@ViewBag.AddAppoitmentStatus == '') {
            return false;
        } else {
            var returnValue = @ViewBag.AddAppoitmentStatus;
            returnValue = returnValue.split('-');
            var status = returnValue[0];
            var phoneNo = returnValue[1];

            if (status != 0) {
                $("#success-alert").show();
                setNotification("Mã xác nhận cuộc hẹn được gửi đến số điện thoại " + phoneNo + ". Vui lòng kiểm tra tin nhắn", 1);
            } else {
                $("#error-alert").show();
                setNotification("Đặt lịch hẹn không thành công, xin hãy thử lại.", 3);
            }
        }
    }*@

    $(document).ready(function () {
        displayNotification();
    });

    $(function () {
        $("#birthdayDatetime").mask("99/99/9999");
        $("#appointmentDate").mask("99/99/9999");
        $("#startTime").mask("99:99");
    });

    $(document).ready(function () {

        $.validator.addMethod("PhoneNo",
            function (value, element) {
                return /^[0-9()]*$/.test(value);
            }, "Số điện thoại không phù hợp.");

        //add-appointment-form validation
        $('#add-appointment-form').validate({
            // Rules for form validation
            rules: {
                FullName: {
                    required: true,
                    maxlength: 32
                },
                Birthday: {
                    required: true
                },
                PhoneNo: {
                    required: true,
                    minlength: 8,
                    maxlength: 13,
                    phone: true
                },
                Email: {
                    email: true
                },
                HealthInsuranceCode: {
                    minlength: 8,
                    maxlength: 13
                },
                SpecialityID: {
                    required: true
                }
            },

            // Messages for form validation
            messages: {
                FullName: {
                    required: '@string.Format(ErrorMessage.CEM001, Constants.FullName)',
                    maxlength: '@string.Format(ErrorMessage.CEM003, Constants.FullName, 64)'
                },
                Birthday: {
                    required: '@string.Format(ErrorMessage.CEM011, Constants.Birthday)'
                },
                HealthInsuranceCode: {
                    length: '@string.Format(ErrorMessage.CEM005, Constants.HealthInsuranceCode)'
                },
                SpecialityID: {
                    required: '@string.Format(ErrorMessage.CEM011, Constants.Speciality)',
                },
                PhoneNo: {
                    required: '@string.Format(ErrorMessage.CEM001, Constants.PhoneNo)',
                    minlength: '@string.Format(ErrorMessage.CEM012, Constants.PhoneNo, 8)',
                    maxlength: '@string.Format(ErrorMessage.CEM003, Constants.PhoneNo, 13)'
                },
                Email: {
                    email: '@string.Format(ErrorMessage.CEM005, Constants.Email)'
                }
            },

            // Do not change code below
            errorPlacement: function (error, element) {
                error.insertAfter(element.parent());
            }
        });

        @*AJAX for cascading Doctor drop down list*@
        $("#SpecialityID").change(function () {
            var selectedItem = $(this).val();
            var hospitalID = $("#HospitalID").val();
            var ddlDoctor = $("#DoctorID");
            var statesProgress = $("#states-loading-doctor-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl(Constants.GetDoctorBySpecialityAction))",
                data: { "specialityID": selectedItem, "hospitalID": hospitalID },
                success: function (data) {
                    ddlDoctor.html('');
                    ddlDoctor.append($('<option></option>').val(0).html("-- Xin chọn bác sĩ --"));
                    $.each(data, function (id, option) {
                        ddlDoctor.append($('<option></option>').val(option.id).html(option.name));
                    });
                    statesProgress.hide();
                    disableDays = AllDays;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    statesProgress.hide();
                }
            });
        });

        // AJAX for cascading Doctor's working days datepicker
        var AllDays = [8, 2, 3, 4, 5, 6, 7];
        var disableDays = AllDays;
        var date = new Date();
        var currentMonth = date.getMonth();
        var currentDate = null;
        var currentYear = date.getFullYear();
        if (date.getHours() >= 22) {
            currentDate = date.getDate() + 1;
        } else {
            currentDate = date.getDate();
        }
        $("#DoctorID").change(function () {
            var selectedItem = $(this).val();
            var txtDate = $("#appointmentDate");
            var statesProgress = $("#states-loading-doctor-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl(Constants.GetWorkingDayAction))",
                data: { "doctorID": selectedItem },
                success: function (data) {
                    disableDays = data;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    disableDays = AllDays;
                    statesProgress.hide();
                }
            });
        });
        // Ngay kham datepicker
        $("#appointmentDate").datepicker({
            dateFormat: "dd/mm/yy",
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            minDate: new Date(currentYear, currentMonth, currentDate),
            beforeShowDay: function ShowDisableDates(date) {
                var ymd = date.getFullYear() + "/" + ("0" + (date.getMonth() + 1)).slice(-2) + "/" + ("0" + date.getDate()).slice(-2);
                day = new Date(ymd).getDay();
                if ($.inArray(AllDays[day], disableDays) < 0) {
                    return [false, "disabled"];
                } else {
                    return [true, "enable"];
                }
            },
            onSelect: function (dateText, inst) {
                var selectedItem = $(this).val();
                var hospitalID = $("#HospitalID").val();
                var doctorID = $("#DoctorID").val();
                var checkHealthDate = $("#").val();
                var ddlTimeCheckHealth = $("#StartTime")
                var statesProgress = $("#states-loading-doctor-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl(Constants.LoadTimeCheckHealthAction))",
                    data: { "hospitalID": hospitalID, "doctorID": doctorID, "checkHealthDate": selectedItem },
                    success: function (data) {
                        ddlTimeCheckHealth.html('');
                        ddlTimeCheckHealth.append($('<option></option>').val(0).html("-- Xin chọn thời gian --"));
                        $.each(data, function (id, option) {
                            ddlTimeCheckHealth.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                        disableDays = AllDays;
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        statesProgress.hide();
                    }
                });
            }
        }).datepicker("setDate", new Date());

        $("#birthdayDatetime").datepicker({
            dateFormat: "dd/mm/yy",
            maxDate: new Date(currentYear, currentMonth, currentDate - 1),
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>'
        }).datepicker("setDate", new Date() - 1);
        $("birthdayDatetime").select(function () {});
    });

</script>
<style>
    .row_o
    {
        margin: 0 20px;
    }

    .required
    {
        color: red;
        margin-top: 7px;
    }

    .titleL
    {
        float: left;
        color: #333333;
        font-family: "BotonFont";
        font-size: 24px;
        text-transform: uppercase;
    }
</style>

<section id="widget-grid" class="">
    <div class="alert alert-danger fade in" style="display: none;"
        id="error-alert">
        <button class="close" data-dismiss="alert">
            ×
        </button>
        <i class="fa-fw fa fa-times"></i>
        <strong>Lỗi!</strong> thao tác không thành công. Xin vui lòng thử lại.
    </div>
    <div class="alert alert-success fade in" style="display: none;"
        id="success-alert">
        <button class="close" data-dismiss="alert">
            ×
        </button>
        <i class="fa-fw fa fa-check"></i>
        <strong>Thành công</strong> Thêm mới bệnh viện thành công.
    </div>

    <h2>CreateAppointment</h2>
    <div class="row">
        <article class="col-sm-12 col-md-12 col-lg-7" style="margin-left: 20%;">

            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget" id="wid-id-0" data-widget-colorbutton="false" data-widget-editbutton="false">
                @using (Html.BeginForm(Constants.IndexAction, Constants.AppointmentController,
                FormMethod.Post, new { @class = "smart-form", @id = "add-appointment-form" }))
                {
                    <div>
                        <h1 class="titleL">Đăng ký khám bệnh</h1>
                    </div>
                    <table border="0" cellpadding="0" cellspacing="0" style="width: 100%; background-color: white;">
                        <tbody>
                            <tr>
                                <td style="padding-right: 15px">
                                    <img alt="" src="~/Content/img/pic_mess_capital.jpg" style="width: 110px; height: 105px"></td>
                                <td>
                                    <p>
                                        <span style="color: rgb(88,137,5)">
                                            <span style="font-family: botonfont; font-size: 18px">THÔNG BÁO :</span>
                                        </span>
                                        <span style="line-height: 17.99px; font-family: arial, helvetica, sans-serif; color: rgb(255,0,0); font-size: 12px">
                                            <span style="font-size: 14px"></span></span>
                                        <span style="color: rgb(255,0,0)">Quý khách vui lòng đặt hẹn trước 2 tiếng. Xem trước lịch khám của bác sĩ để đặt hẹn.</span>
                                    </p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <div>
                        <fieldset>
                            <h3>Thông tin bệnh nhân</h3>
                            <br />
                            <div class="row_o">
                                <section class="col col-9">
                                    <label class="input">
                                        <i class="icon-append fa fa-user"></i>
                                        @Html.TextBoxFor(m => m.FullName, new { @placeholder = "Họ tên" })
                                        <b class="tooltip tooltip-top-right"><i class="fa fa-user txt-color-teal"></i>Xin nhập đầy đủ họ tên</b>
                                    </label>
                                </section>
                            </div>
                            <div class="row_o">
                                <section class="col col-5">
                                    <label class="input">
                                        <i class="icon-append fa fa-calendar"></i>
                                        @Html.TextBoxFor(m => m.Birthday, new
                               {
                                   @placeholder = "Ngày sinh",
                                   @id = "birthdayDatetime"
                               })
                                    </label>
                                    <div class="note">Định dạng: dd/mm/yy</div>
                                </section>
                                <section class="col col-4">
                                    <label class="select">
                                        <select name="Speciality">
                                            <option value="-1" selected="" disabled="">Giới tính</option>
                                            <option value="1">Nam</option>
                                            <option value="0">Nữ</option>
                                        </select>
                                        <i></i>
                                    </label>
                                </section>
                            </div>
                            <div class="row_o">
                                <section class="col col-9">
                                    <label class="input">
                                        <i class="icon-append fa fa-envelope-o"></i>
                                        @Html.TextBoxFor(m => m.Email, new
                           {
                               @placeholder = "E-mail"
                           })
                                        <b class="tooltip tooltip-top-right"><i class="fa fa-envelope-o txt-color-teal"></i>Xin nhập Địa chỉ email</b>
                                    </label>
                                </section>
                            </div>
                            <div class="row_o">
                                <section class="col col-9">
                                    <label class="input">
                                        <i class="icon-append fa fa-phone"></i>
                                        @Html.TextBoxFor(m => m.PhoneNo, new
                           {
                               @id = "phoneNo",
                               @placeholder = "Số điện thoại"
                           })
                                        <b class="tooltip tooltip-top-right"><i class="fa fa-phone txt-color-teal"></i>Xin nhập Số điện thoại</b>
                                    </label>
                                </section>
                            </div>
                        </fieldset>
                        @*</div>*@
                        <!-- end widget content -->

                        @*                </div>
                <div style="float: right; width: 50%;">*@
                        <fieldset>
                            <h3>Thông tin đặt hẹn</h3>
                            <br />
                            <div class="row_o">
                                <section class="col col-9">
                                    <label class="input">
                                        <i class="icon-append fa fa-home"></i>
                                        @Html.TextBoxFor(m => m.HospitalName, new { @type = "text", @readonly = "readonly" })
                                    </label>
                                </section>
                            </div>
                            @{ bool isHealthInsurance = ViewBag.IsHealthInsurance;
                               if (isHealthInsurance)
                               {
                                <div class="row_o">
                                    <section class="col col-9">
                                        <label class="input">
                                            <i class="icon-append fa fa-credit-card"></i>
                                            @Html.TextBoxFor(m => m.HealthInsuranceCode, new
                           {
                               @id = "phoneNo",
                               @placeholder = "Mã bảo hiểm y tế (Nếu có)"
                           })
                                            <b class="tooltip tooltip-top-right"><i class="fa fa-credit-card txt-color-teal"></i>Nhập mã bảo hiểm y tế</b>
                                        </label>
                                    </section>
                                </div>
                               }
                            }
                            <div class="row_o">
                                <section class="col col-4">
                                    <label class="select">
                                        @Html.DropDownListFor(m => m.SpecialityID, (SelectList)ViewBag.SpecialityList,
                                                Constants.RequireSpeciality)
                                        <i></i>
                                    </label>
                                </section>
                                <section class="col col-5">
                                    <label class="select">
                                        @Html.DropDownListFor(m => m.DoctorID, (SelectList)ViewBag.DoctorList,
                                                Constants.RequireDoctor)
                                        <i></i>
                                    </label>
                                </section>
                                @*                            <section class="col col-2">
                                <a style="cursor:pointer;">Xem lý lịch</a>
                            </section>*@
                            </div>
                            <div class="row_o">
                                <section class="col col-5">
                                    <label class="input">
                                        <i class="icon-append fa fa-calendar"></i>
                                        @Html.TextBoxFor(m => m.AppDate, new
                                        {
                                            @id = "appointmentDate",
                                            @placeholder = "Ngày khám"
                                        })
                                    </label>
                                    <div class="note">Định dạng: dd/mm/yy</div>
                                </section>
                                <section class="col col-4">
                                    <label class="select">
                                        <i class="icon-append fa fa-clock-o"></i>
                                        @Html.DropDownListFor(m => m.StartTime, (SelectList)ViewBag.TimeList, new
                           {
                               @class = "form-control",
                               @id = "startTime",
                               @placeholder = "Thời gian khám"
                           })
                                    </label>
                                </section>
                            </div>
                            <div class="row_o">
                                <section class="col col-9">
                                    <label class="textarea">
                                        <i class="icon-append fa fa-comment"></i>
                                        @Html.TextAreaFor(m => m.SymptomDescription, new { @placeholder = "Mô tả triệu chứng", @rows = "5" })
                                        <b class="tooltip tooltip-top-right"><i class="fa fa-comment txt-color-teal"></i>Mô tả thêm triệu chứng</b>
                                    </label>
                                </section>
                            </div>
                            @*<div class="row_o">
                                <section class="col col-9">
                                    <label><strong class="txt-color-red">Vui lòng nhập mã bảo vệ bên dưới</strong></label>
                                    @Html.Recaptcha(language: "vi")
                                </section>
                            </div>*@

                        </fieldset>
                    </div>
                    <footer>
                        <button type="reset" class="btn btn-primary">
                            Hủy
                        </button>
                        &nbsp;
                @Html.TextBoxFor(m => m.HospitalID, new { @type = "hidden" })
                        <button type="submit" class="btn btn-primary">
                            Đặt lịch khám
                        </button>
                    </footer>
                }
            </div>
        </article>
    </div>
