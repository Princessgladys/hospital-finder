@model HospitalF.Models.DataModel
@using HospitalF.Constant

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
        &times;
    </button>
    <h4 class="modal-title">
        <img src="../Content/img/hospital-icon.png" alt="HospitalFinder"
             style="width: 10%; height: 10%;" />
        Thêm mới người dùng
    </h4>
</div>
<div class="modal-body no-padding">
    <form action="/Data/AddService" id="add-user-form" class="smart-form" method="post">
        <fieldset>
            <section>
                <div class="row">
                    <label class="label col col-2">Tên dịch vụ</label>
                    <div class="col col-10">
                        <label class="input">
                            <i class="icon-append fa fa-cloud-upload"></i>
                            @Html.TextBoxFor(m => m.ServiceName, new { @placeholder = "Tên dịch vụ" })
                            <b class="tooltip tooltip-top-right"><i class="fa fa-cloud-upload txt-color-teal"></i> Xin nhập Tên dịch vụ</b>
                        </label>
                    </div>
                </div>
            </section>
            <section>
                <div class="row">
                    <label class="label col col-2">Loại dịch vụ</label>
                    <div class="col col-10">
                        <label class="select">
                            <i></i>
                            @Html.DropDownListFor(m => m.TypeID, (SelectList)ViewBag.ServiceTypeList,
                            "-- Chọn loại dịch vụ -- ", new { @class = "form-control" })
                            @Html.TextBoxFor(m => m.TypeName, new { @type = "hidden" })
                        </label>
                    </div>
                </div>
            </section>
        </fieldset>

        <footer>
            <button type="button" class="btn" data-dismiss="modal">
                <i class="fa fa-times"></i> Thoát
            </button>
            <button type="submit" class="btn btn-primary">
                <i class="fa fa-save" id="add-button"></i>&nbsp;
                Xác nhận
            </button>
        </footer>
    </form>
</div>

<script>
    @*Add new hospital user*@
    $("#add-button").click(function () {
        var serviceName = $("#ServiceName").val();
        var typeId = $("#TypeID").val();
        var typeName = $("#TypeID option:selected").text()

        $.ajax({
            cache: false,
            type: "POST",
            url: "@(Url.RouteUrl(Constants.AddServiceAction))",
            data: {
                "serviceName": serviceName,
                "typeId": secondEmail
            },
            success: function (data) {
                if (data.result != 0) {
                    setNotification("Thêm mới dịch vụ [" + typeName + "] thành công!", 1);
                } else {
                    setNotification("Thêm mới dịch vụ [" + typeName + "] không thành công, xin hãy thử lại.", 3);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                setNotification("Thêm mới dịch vụ [" + typeName + "] không thành công, xin hãy thử lại.", 3);
            }
        });

        return false;
    })

    @*Data validation*@
    var email = $("Email").val();
    $("#add-user-form").validate({
        rules: {
            ServiceName: {
                required: true,
                minlength: 3,
                maxlength: 64,
            },
            TypeID: {
                required: true
            }
        },

        messages: {
            ServiceName: {
                required: '@string.Format(ErrorMessage.CEM001, "Tên dịch vụ")',
                minlength: '@string.Format(ErrorMessage.CEM012, "Tên dịch vụ", 3)',
                maxlength: '@string.Format(ErrorMessage.CEM003, "Tên dịch vụ", 64)'
            },
            TypeID: {
                required: '@string.Format(ErrorMessage.CEM011, "Loại dịch vụ")',
            }
        },

        errorPlacement: function (error, element) {
            error.insertAfter(element.parent());
        }
    });
</script>