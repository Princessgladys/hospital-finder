@using HospitalF.Constant
@model HospitalF.Models.FeedBackModel

<!-- Modal -->

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
        &times;
    </button>
    <h4 class="modal-title">
        <img src="../Content/img/HospitalF - Logo.png" width="150" alt="HospitalF">
    </h4>
</div>
<div class="modal-body no-padding">
    <form action="/Home/Feedback" method="post" id="feedback-form" class="smart-form">
        <fieldset>
            <section>
                <div class="row">
                    @Html.TextBoxFor(m => m.HospitalID, new { type = "hidden" })
                </div>
            </section>

            <section>
                <div class="row">
                    <label class="label col col-2">Email người gửi</label>
                    <div class="col col-10">
                        <label class="input">
                            <i class="icon-append fa fa-user"></i>
                            @Html.TextBoxFor(m => m.Email, new { type = "email" })
                        </label>
                    </div>
                </div>
            </section>

            <section>
                <div class="row">
                    <label class="label col col-2">Tiêu đề</label>
                    <div class="col col-10">
                        <label class="input">
                            <i class="icon-append fa fa-header"></i>
                            @Html.TextBoxFor(m => m.Header)
                        </label>
                    </div>
                </div>
            </section>

            <section>
                <div class="row">
                    <label class="label col col-2">Loại phản hồi</label>
                    <div class="col col-10">
                        <label class="select">
                            @Html.DropDownListFor(m => m.FeedbackType, (SelectList)ViewBag.FeedbackTypeList)
                            <i></i>
                        </label>
                    </div>
                </div>
            </section>

            <section>
                <div class="row">
                    <label class="label col col-2">Phản hồi</label>
                    <div class="col col-10">
                        <label class="textarea">
                            @Html.TextAreaFor(m => m.FeedbackContent)
                            <i></i>
                        </label>
                    </div>
                </div>
            </section>
        </fieldset>

        <footer>
            <button type="submit" class="btn btn-primary">
                <i class="fa fa-save"></i>&nbsp;
                Xác nhận
            </button>
            <button type="button" class="btn" data-dismiss="modal">
                <i class="fa fa-times"></i>&nbsp;Thoát
            </button>
        </footer>
    </form>
</div>
<!-- /.modal -->


<script type="text/javascript">
    @*Data validation*@

    $("#feedback-form").validate({
        rules: {
            Email: {
                required: true,
                email: true
            },
            Header: {
                required: true,
                maxlength: 64
            },
            FeedbackContent: {
                required: true,
                minlength: 10,
                maxlength: 300
            }
        },

        messages: {
            Email: {
                required: '@string.Format(ErrorMessage.CEM001, Constants.Email)',
                email: '@string.Format(ErrorMessage.CEM005, Constants.Email)'
            },
            Header: {
                required: '@string.Format(ErrorMessage.CEM001, "Tiêu đề")',
            },
            FeedbackContent: {
                required: '@string.Format(ErrorMessage.CEM001, "nội dung phản hồi")',
                minlength: '@string.Format(ErrorMessage.CEM012, "nội dung phản hồi", 10)',
                maxlength: '@string.Format(ErrorMessage.CEM003, "nội dung phản hồi", 300)'
            }
        },

        errorPlacement: function (error, element) {
            error.insertAfter(element.parent());
        }
    });
</script>
