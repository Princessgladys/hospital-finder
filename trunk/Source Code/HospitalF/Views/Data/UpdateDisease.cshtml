@model HospitalF.Models.DataModel
@using HospitalF.Constant

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
        &times;
    </button>
    <h4 class="modal-title">
        <img src="../Content/img/hospital-icon.png" alt="HospitalFinder"
             style="width: 10%; height: 10%;" />
        Chỉnh sửa bệnh / triệu chứng
    </h4>
</div>
<div class="modal-body no-padding">
    @using (Html.BeginForm(Constants.UpdateDiseaseAction, Constants.DataController, FormMethod.Post, new { @id = "update-form", @class = "smart-form" }))
    {
        @Html.TextBoxFor(m => m.DiseaseID, new { @type = "hidden" })
        <fieldset>
            <section>
                <div class="row">
                    <label class="label col col-3">Tên bệnh / triệu chứng</label>
                    <div class="col col-9">
                        <label class="input">
                            <i class="icon-append fa fa-building"></i>
                            @Html.TextBoxFor(m => m.DiseaseName, new { @placeholder = "Tên bệnh / triệu chứng" })
                            <b class="tooltip tooltip-top-right"><i class="fa fa-building txt-color-teal"></i> Xin nhập Tên bệnh / triệu chứng</b>
                        </label>
                    </div>
                </div>
            </section>
            <section>
                <div class="row">
                    <label class="label col col-3">Danh sách chuyên ngành </label>
                    <div class="col col-9">
                        <div class="form-group">
                            <select class="select2 select2-offscreen" id="SelectedSpecialities"
                                    multiple="multiple" name="SelectedSpecialities"
                                    style="width:100%" tabindex="-1">
                                @{
                                    if (Model.SelectedSpecialities.Count() == 0)
                                    {
                                        foreach (var speciality in Model.SpecialityList)
                                        {
                                            <option value="@speciality.Speciality_ID">@speciality.Speciality_Name</option>
                                        }
                                    }
                                    else if (Model.SpecialityList.Count() == Model.SelectedSpecialities.Count())
                                    {
                                        foreach (var speciality in Model.SpecialityList)
                                        {
                                            <option value="@speciality.Speciality_ID"
                                                    selected="selected">
                                                @speciality.Speciality_Name
                                            </option>
                                        }
                                    }
                                    else
                                    {
                                        int isInserted = 0;

                                        foreach (var speciality in Model.SpecialityList)
                                        {
                                            isInserted = 0;
                                            foreach (var value in Model.SelectedSpecialities)
                                            {
                                                if (speciality.Speciality_ID.ToString().Equals(value))
                                                {
                                                    <option value="@speciality.Speciality_ID"
                                                            selected="selected">
                                                        @speciality.Speciality_Name
                                                    </option>
                                                    isInserted = 1;
                                                    break;
                                                }
                                            }
                                            if (isInserted == 0)
                                            {
                                                <option value="@speciality.Speciality_ID">@speciality.Speciality_Name</option>
                                            }
                                        }
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </section>
        </fieldset>

        <footer>
            <button type="button" class="btn" data-dismiss="modal">
                <i class="fa fa-times"></i> Thoát
            </button>
            <button type="submit" class="btn btn-primary">
                <i class="fa fa-save" id="add-button"></i>&nbsp;
                Xác nhận
            </button>
        </footer>
    }
</div>

<script>
    pageSetUp();

    @*Data validation*@
    $("#add-form").validate({
        rules: {
            DiseaseName: {
                required: true,
                minlength: 2,
                maxlength: 64,
            }
        },

        messages: {
            DiseaseName: {
                required: '@string.Format(ErrorMessage.CEM001, "Tên bệnh / triệu chứng")',
                minlength: '@string.Format(ErrorMessage.CEM012, "Tên bệnh / triệu chứng", 2)',
                maxlength: '@string.Format(ErrorMessage.CEM003, "Tên bệnh / triệu chứng", 64)'
            }
        },

        errorPlacement: function (error, element) {
            error.insertAfter(element.parent());
        }
    });
</script>