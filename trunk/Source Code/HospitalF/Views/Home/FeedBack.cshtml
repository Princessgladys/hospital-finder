@model HospitalF.Models.FeedBackModels
@using HospitalF.Constant

@using Recaptcha.Web.Mvc;

<link href="~/Scripts/dropzone/css/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/css/dropzone.css" rel="stylesheet" />
<script src="~/Content/js/plugin/bootstrap-taginput/bootstrap-tagsinput.js"></script>
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
        &times;
    </button>
    <h4 class="modal-title">
        <img src="../Content/img/hospital-icon.png" alt="HospitalFinder"
            style="width: 10%; height: 10%;" />
        Phản hồi
    </h4>
    <p>
        Chúng tôi rất hân hạnh nhận được những phản hồi của quý khách về hệ thống.<br>
        <br>
        Ý kiến phản hồi của Quý Khách sẽ được đảm bảo tuyệt mật và sẽ được sử dụng để giúp chúng tôi cải thiện chất lượng dịch vụ.
    </p>
</div>
<div class="modal-body no-padding">
    @using (Html.BeginForm(Constants.FeedbackAction, Constants.HomeController, FormMethod.Post, new
        {
            @id = "add-feedback-form",
            @class = "smart-form",

        }))
    {
        <fieldset>
            <section>
                <div class="row">
                    <label class="label col col-3">
                        Loại ý kiến
                        <label class="required">*</label></label>
                    <div class="col col-10">
                        <label class="select">
                            @Html.DropDownListFor(m => m.FeedbackType, (SelectList)ViewBag.FeedbackTypeList, Constants.RequiredFeedback)
                            <i></i>
                        </label>
                    </div>
                </div>
            </section>
            <section>
                <div class="row">
                    <label class="label col col-3">Email</label>
                    <div class="col col-10">
                        <label class="input">
                            <i class="icon-append fa fa-envelope"></i>
                            @Html.TextBoxFor(m => m.Email, new { @placeholder = "Nhập email" })
                        </label>
                    </div>
                </div>
                <div class="row">
                    <label class="label col col-3"></label>
                    <div class="col col-10">
                        @*<img src="../Content/img/ajax-loader.gif" class="resizeIcon"
                            style="display: none;" id="loaderIconEmail">*@
                        <img src="../Content/img/Status/Valid.ico" class="resizeIcon"
                            style="display: none;" id="validIconEmail">
                        <img src="../Content/img/Status/Invalid.ico" class="resizeIcon"
                            style="display: none;" id="invalidIconEmail">
                        <span id="email-message"></span>
                    </div>
                </div>
            </section>
            <section>
                <div class="row">
                    <label class="label col col-3">
                        Tiêu đề
                        <label class="required">*</label></label>
                    <div class="col col-10">
                        <label class="input">
                            <i class="icon-append fa fa-tag"></i>
                            @Html.TextBoxFor(m => m.Header, new { @placeholder = "Nhập tiêu đề" })
                        </label>
                    </div>
                </div>
            </section>
            <section>
                <div class="row">
                    <label class="label col col-3">
                        Nội dung
                        <label class="required">*</label></label>
                    <div class="col col-10">
                        <label class="textarea">
                            <i class="icon-append fa fa-comment"></i>
                            @Html.TextAreaFor(m => m.FeedbackContent, new { @placeholder = "Nhập nội dung" })
                        </label>
                    </div>
                </div>
                @*<div class="form-group">
                    <label><strong class="txt-color-red">Vui lòng nhập mã bảo mật bên dưới</strong></label>
                    @Html.Recaptcha(language: "vi")
                </div>*@
            </section>

        </fieldset>

        <footer>
            <button type="button" class="btn" data-dismiss="modal">
                <i class="fa fa-times"></i>Thoát
            </button>
            @Html.TextBoxFor(m => m.HospitalID, new { @type = "hidden" })
            <button type="submit" class="btn btn-primary">
                <i class="fa fa-save" id="add-feedback-button"></i>&nbsp;
                Gửi
            </button>
        </footer>
    }
</div>
<style>
    .resizeIcon
    {
        width: 16px;
        height: auto;
    }

    .required
    {
        color: red;
    }
</style>
<script>
    @*Set user message notification*@
    function setEmailNotificationMessage(message, mode) {
        if (mode == 1) {
            $("#loaderIconEmail").hide();
            $("#validIconEmail").show();
            $("#invalidIconEmail").hide();
            $("#email-message").text(message);
            $('#Email').css('background', '#f0fff0');
            $('#Email').css('border-color', '#7DC27D');
        } else {
            $("#loaderIconEmail").hide();
            $("#validIconEmail").hide();
            $("#invalidIconEmail").show();
            $("#email-message").text(message);
            $('#Email').css('background', '#fff0f0');
            $('#Email').css('border-color', '#A90329');
        }
    }

    @*Check duplicated user*@
    var timeoutReference;

    $("#Email").on('input', function () {
        $("#loaderIconEmail").show();
        var email = $("#Email").val();
        if (timeoutReference) clearTimeout(timeoutReference);
        timeoutReference = setTimeout(function () {
            if (email.trim() == "") {
                $("#loaderIconEmail").hide();
                $("#validIconEmail").hide();
                $("#invalidIconEmail").hide();
                $("#email-message").hide();
                return false;
            }
        }, 1500);
    });

    @*Data validation*@
    var email = $("Email").val();
    $("#add-feedback-form").validate({
        rules: {
            FeedbackType: {
                required: true,
            },
            Email: {
                email: true
            },
            Header: {
                required: true,
                maxlength: 64
            },
            FeedbackContent: {
                required: true,
                maxlength: 256
            }
        },

        messages: {
            FeedbackType: {
                required: '@string.Format(ErrorMessage.CEM001, Constants.Feedback)',
            },
            Email: {
                email: '@string.Format(ErrorMessage.CEM005, Constants.Email)'
            },
            Header: {
                required: '@string.Format(ErrorMessage.CEM001, Constants.Header)',
                maxlength: '@string.Format(ErrorMessage.CEM003, Constants.Header, 64)'
            },
            FeedbackContent: {
                required: '@string.Format(ErrorMessage.CEM001, Constants.Content)',
                maxlength: '@string.Format(ErrorMessage.CEM003, Constants.Content, 256)'
            }
        },

        errorPlacement: function (error, element) {
            error.insertAfter(element.parent());
        }
    });
</script>
