@using HospitalF.Constant
@using HospitalF.Entities;
@using PagedList.Mvc;
@using PagedList;

@{
    IPagedList<HospitalEntity> hospitalList = (IPagedList<HospitalEntity>)ViewBag.HospitalList;
    string suggestionSentence = (string)@ViewBag.SuggestionSentence;
}

<!-- MAIN CONTENT -->
<div id="content-results" class="col-md-12 col-md-offset-0 well">
    <div class="col-md-8">
        @using (Html.BeginForm(Constants.SearchResultAction, Constants.HomeController, FormMethod.Get, new { @class = "form-horizontal", @id = Constants.NormalSearchForm }))
        {

            <div class="input-group">
                @Html.TextBox("SearchValue1", null, new { @class = "form-control", placeholder = "Nhập thông tin tìm kiếm..." })
                <div class="input-group-btn">
                    <button class="btn btn-default btn-primary" type="submit"
                            value="@Constants.NormalSearchForm" name="@Constants.Button"
                            id="normal-search-button">
                        <i class="fa fa-search"></i>&nbsp;Tìm Kiếm
                    </button>
                </div>
            </div>
            <p class="note"><strong>Ví dụ:</strong> chuyên khoa, tên bệnh viện, địa điểm...</p>
        }
    </div>
    <div class="col-md-12">
        @using (Html.BeginForm(Constants.FilterResultAction, Constants.HomeController, FormMethod.Get, new { @class = "form-horizontal" }))
        {
            <fieldset>
                @if (!string.IsNullOrEmpty(suggestionSentence))
                {
                    suggestionSentence = suggestionSentence.Trim();
                    <p>
                        Có phải bạn muốn tìm <i>
                            @Html.ActionLink(suggestionSentence,
                                Constants.SearchResultAction, Constants.HomeController,
                                new { SearchValue = suggestionSentence }, null)
                        </i>
                    </p>
                }
                @if (hospitalList.TotalItemCount == 0)
                {
                    <p>Không có kết quả tìm kiếm với từ khóa <span style="color: blue">@ViewBag.SearchValue</span></p>
                }
                else
                {
                    <div class="row" id="filter-bar">
                        <div class="form-group col-md-4">
                            <label class="control-label col-md-4" for="prepend">Đánh Giá</label>
                            <div class="col-md-8">
                                <div class="icon-addon addon-sm">
                                    <select class="form-control">
                                        <option>Cao Nhất</option>
                                        <option>Thấp Nhât</option>
                                    </select>
                                    <label class="glyphicon glyphicon-sort" title="Đánh Giá"></label>
                                </div>
                            </div>
                        </div>


                        <div class="form-group col-md-4">
                            <label class="control-label col-md-4" for="prepend">Loại</label>
                            <div class="col-md-8">
                                <div class="icon-addon addon-sm">
                                    @Html.DropDownList("HospitalType", (SelectList)ViewBag.HospitalTypes, "Tất Cả", new { @class = "form-control" })
                                    <label class="glyphicon glyphicon-list-alt" title="Loại Bệnh Viện"></label>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <button class="btn btn-primary pull-right" type="submit">
                                <i class="fa fa-refresh"></i>&nbsp;
                            Cập Nhật
                            </button>
                        </div>
                    </div>
                }
            </fieldset>
        }
    </div>

    <div class="col-md-12">
        <hr />
        <div id="hospital-list-results" class="col-md-4" style="padding: 0;">

            @if (hospitalList.TotalItemCount > 0)
            {
                <h1 class="font-md">Danh sách <span class="semi-bold">bệnh viện</span><small class="text-danger"> &nbsp;&nbsp;(@(hospitalList != null ? hospitalList.TotalItemCount : 0) kết quả)</small></h1>
                foreach (HospitalEntity hospital in hospitalList)
                {
                <div class="search-results clearfix smart-form hospital-record">

                    <h5 class="truncate"><i class="fa fa-plus-square txt-color-blue"></i>&nbsp;<a href="javascript:void(0);">@(hospital.Hospital_Name)</a></h5>

                    <div style="width: 100%">
                        @if (hospital.Distance > 0)
                        {
                            <p class="description truncate">
                                <i class="fa fa-truck"></i>&nbsp;@(hospital.Distance / 1000)&nbsp;km
                            </p>
                        }
                        <p class="description truncate">
                            @(hospital.Address)
                        </p>
                        <p class="description truncate">
                            @(hospital.Phone_Number)
                        </p>
                    </div>

                </div>               
                }
                
                <div class="text-center">
                    <hr>
                    @Html.PagedListPager(hospitalList, page => Url.Content(Constants.SearchResultAction + "?" + ViewBag.Query + "&page=" + page), PagedListRenderOptions.OnlyShowFivePagesAtATime)
                    <br>
                    <br>
                    <br>
                </div>
            }
            else
            {
                <ul>
                    <li>Xin bạn chắc chắn rằng tất cả các từ đều đúng chính tả.</li>
                    <li>Hãy thử những từ khóa khác.</li>
                </ul>
            }


        </div>

        @if (hospitalList.TotalItemCount > 0)
        {
            <div id="map-results" class="col-md-8" style="padding: 0;">
                <div id="map-canvas"></div>
            </div>
        }


    </div>
</div>
<!-- END MAIN CONTENT -->

<script type="text/javascript">
    @*AJAX for auto completing basic search value textbox*@
    $(document).ready(function () {

        $('.truncate').bind('mouseenter', function () {
            var $this = $(this);

            if (this.offsetWidth < this.scrollWidth && !$this.attr('title')) {
                $this.attr('title', $this.text());
            }
        });

        $("#SearchValue").on('input', function () {
            var statesProgress = $("#states-loading-search-progress");
            var availableTags = new Array();
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl(Constants.LoadSuggestSentenceAction))",
                success: function (data) {
                    $.each(data, function (id, option) {
                        availableTags.push(option);
                    });
                    statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    statesProgress.hide();
                }
            });
            $("#SearchValue").autocomplete({
                source: function (request, response) {
                    var results = $.ui.autocomplete.filter(availableTags, request.term);
                    response(results.slice(0, 5));
                }
            });
        });
    });

    @*Data validation*@
    $(document).ready(function () {
        $("#normal-search-button").click(function () {
            var searchValue = $('#SearchValue').val().trim();
            if (searchValue != "") {
                $('#normal-search-form').submit();
            }
            else {
                return false;
            }
        });
    });

    // GOOGLE - API

    // Google map
    var map;
    // Copy list of google markers
    var markers = [];
    // Copy list of content string of inforwindow
    var contentStringList = [];
    // List of windows that show detailed information of hospital on map
    var infowindow = new google.maps.InfoWindow();
    // Parse JSON hospital list to javascript object
    var hospitalList = JSON && JSON.parse('@Html.Raw(ViewBag.JsonHospitalList)') || $.parseJSON('@Html.Raw(ViewBag.JsonHospitalList)');
    // Position
    var position = '@(ViewBag.Position)';
    // Radius
    var radius = @(ViewBag.Radius != null ? ViewBag.Radius : 0);
 

    function panToMarker(coordinate) {
        lat = coordinate.split(',')[0];
        lng = coordinate.split(',')[1].trim();
        map.panTo(new google.maps.LatLng(lat, lng));
    }

    function toggleBounce(marker) {

        if (marker.getAnimation() != null) {
            marker.setAnimation(null);
        } else {
            marker.setAnimation(google.maps.Animation.BOUNCE);
        }
    }

    function clearToogleBounce() {
        for (var i; i < markers.length; i++) {
            markers[i].setAnimation(null);
        }
    }

    function onClickHospitalRecord(record, marker, contentString) {
        $(".hospital-record").attr("style", "");
        record.attr("style", "background-color: #d9edf7");
        map.panTo(marker.getPosition());
        infowindow.setContent(contentString);
        infowindow.open(map, marker);
    }

    // Create marker of hospital on map
    function createMarker(latlng, html, markerType) {
        // Add markers to the map

        // Marker sizes are expressed as a Size of X,Y
        // where the origin of the image (0,0) is located
        // in the top left of the image.

        // Origins, anchor positions and coordinates of the marker
        // increase in the X direction to the right and in
        // the Y direction down.
        var image = {
            url: '../Content/img/hospital-2.png',
            // This marker is 20 pixels wide by 32 pixels tall.
            size: new google.maps.Size(32, 37),
            // The origin for this image is 0,0.
            origin: new google.maps.Point(0, 0),
            // The anchor for this image is the base of the flagpole at 0,32.
            anchor: new google.maps.Point(0, 32)
        };
        // Shapes define the clickable region of the icon.
        // The type defines an HTML &lt;area&gt; element 'poly' which
        // traces out a polygon as a series of X,Y points. The final
        // coordinate closes the poly by connecting to the first
        // coordinate.
        var shape = {
            coords: [1, 1, 1, 37, 32, 37, 32, 1],
            type: 'poly'
        };

        var contentString = html;
        var marker;
        if (markerType == 0) {
            marker = new google.maps.Marker({
                position: latlng,
                map: map,
                draggable: false,
                optimized: false,
                animation: google.maps.Animation.BOUNCE,
                zIndex: Math.round(latlng.lat() * -100000) << 5
            });
        } else {
            marker = new google.maps.Marker({
                position: latlng,
                map: map,
                draggable: false,
                optimized: false,
                animation: google.maps.Animation.DROP,
                icon: image,
                shape: shape,
                zIndex: Math.round(latlng.lat() * -100000) << 5
            });
        }
        markers.push(marker);
        google.maps.event.addListener(marker, 'click', function () {
            infowindow.setContent(contentString);
            infowindow.open(map, marker);
            map.panTo(marker.getPosition());
        });

        google.maps.event.addListener(marker, 'mouseover', function () {
            toggleBounce(marker);
        });

        google.maps.event.addListener(marker, 'mouseout', function () {
            toggleBounce(marker);
        });

    }
    // ------------------------------------------------------------------------

    function initializeMap() {
        if (hospitalList.length > 0) {
            var latlng = null;
            if (position) {
                // Get coordinate of position
                postionLongitude = position.split(',')[0];
                postionLatitude = position.split(',')[1].trim();
                latlng = new google.maps.LatLng(postionLongitude, postionLatitude);
            }
            // Draw the map
            var options = {
                zoom: 10,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                mapTypeControl: false
            };

            map = new google.maps.Map(document.getElementById("map-canvas"), options);

            google.maps.event.addListener(map, 'click', function () {
                infowindow.close();
            });
            // ------------------------------------------------------------------------
            if (position) {
                // Draw circle to show the radius from input position
                var circleOptions = {
                    strokeColor: '#2c699d',
                    strokeOpacity: 0.5,
                    strokeWeight: 2,
                    fillColor: '#3276b1',
                    fillOpacity: 0.1,
                    map: map,
                    center: latlng,
                    radius: isNaN(radius) ? 0 : radius
                };

                var circle = new google.maps.Circle(circleOptions);

                google.maps.event.addListener(circle, 'click', (function () {
                    infowindow.close();
                }));
            }
            // ------------------------------------------------------------------------

            // Fit map for user can view all marker on map with highest zoom level
            var myBounds = new google.maps.LatLngBounds();
            // Create marker on map with info window
            for (i = 0; i < hospitalList.length; i++) {
                var coordinate = hospitalList[i].Coordinate;
                var longitude = (hospitalList[i].Coordinate.split(',')[0]).trim();
                var latitude = (hospitalList[i].Coordinate.split(',')[1]).trim();
                myBounds.extend(new google.maps.LatLng(longitude, latitude));
                var contentString = '<div style="width: 300px;">' +
                                    '<table class="table">' +
                                    '<thead>' +
                                    '<tr class="info">' +
                                    '<th>' + hospitalList[i].Hospital_Name + '</th>' +
                                    '</tr>' +
                                    '</thead>' +
                                    '<tbody>' +
                                    '<tr>' +
                                    '<td>' + hospitalList[i].Address + '</td>' +
                                    '</tr>' +
                                    '<tr>' +
                                    '<td>' + hospitalList[i].Phone_Number + '</td>' +
                                    '</tr>' +
                                    '</tbody>' +
                                    '</table>' +
                                    '</div>';
                contentStringList.push(contentString);
                createMarker(new google.maps.LatLng(longitude, latitude), contentString, 1);
            }
            $(".hospital-record").each(function (index) {
                $(this).click(function () {
                    onClickHospitalRecord($(this), markers[index], contentStringList[index]);
                });
            });
            if (position) {
                myBounds.extend(latlng);
                createMarker(new google.maps.LatLng(postionLongitude, postionLatitude), "Vị trí hiện tại", 0);
            }
            map.fitBounds(myBounds);
            // ------------------------------------------------------------------------
        }
    }

    // Initialize map when page load 
    google.maps.event.addDomListener(window, 'load', initializeMap);
    // ------------------------------------------------------------------------
</script>
