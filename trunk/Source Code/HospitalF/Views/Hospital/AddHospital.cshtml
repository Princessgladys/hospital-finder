@using HospitalF.Constant;

@model HospitalF.Models.HospitalModel
@{
    ViewBag.Title = "Thêm mới bệnh viện";
}

<div class="row">
    <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
        <h1 class="page-title txt-color-blueDark">
            <i class="fa fa-pencil-square-o fa-fw "></i>
            Thêm mới bệnh viện
            <span>
                >
                Nhập liệu
            </span>
        </h1>
    </div>
</div>

<div class="alert alert-block alert-success">
    <h4 class="alert-heading"><i class="fa fa-check-square-o"></i> Nhập thông tin</h4>
    <p>
        Điền những thông tin cần thiết vào bản mẫu. Sau đó ấn xác nhận để tạo bệnh viện mới.
    </p>
</div>

<!-- widget grid -->
<section id="widget-grid" class="">
    <!-- row -->
    <div class="row">
        <!-- NEW WIDGET START -->
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable">
            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-blueLight" id="wid-id-0"
                 data-widget-colorbutton="false"
                 data-widget-editbutton="false"
                 data-widget-togglebutton="false"
                 data-widget-deletebutton="false"
                 data-widget-fullscreenbutton="false"
                 data-widget-custombutton="false"
                 data-widget-collapsed="false"
                 data-widget-sortable="false">
                <header>
                    <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                    <h2>Thông tin bệnh viện</h2>
                </header>
                <!-- widget div-->
                <div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body">
                        @using (Html.BeginForm(Constants.AddHospitalAction, Constants.HospitalController, FormMethod.Post, new { @class = "smart-form", @id = "add-hospital-form" }))
                        {
                            <fieldset>
                                <legend>Thông tin căn bản</legend>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-home"></i>
                                            @Html.TextBoxFor(m => m.HospitalName, new { @placeholder = "Nhập tên bệnh viện" })
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="select">
                                            <i></i>
                                            @Html.DropDownListFor(m => m.HospitalTypeID, (SelectList)ViewBag.HospitalTypeList,
                                                Constants.RequireHospitalType, new { @class = "form-control" })
                                            @Html.TextBoxFor(m => m.HospitalTypeName, new { @type = "hidden" })
                                        </label>
                                    </section>
                                </div>

                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-clock-o"></i>
                                            @Html.TextBoxFor(m => m.OrdinaryStartTime, new { @placeholder = "Giờ làm ngày thường", @id = "OrdinaryTime" })
                                        </label>
                                        <p class="note"><strong>Định dạng:</strong> HH:mm - HH:mm</p>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-clock-o"></i>
                                            @Html.TextBoxFor(m => m.OrdinaryEndTime, new { @placeholder = "Giờ làm ngày lễ", @id = "HolidayTime" })
                                        </label>
                                        <p class="note"><strong>Định dạng:</strong> HH:mm - HH:mm</p>
                                    </section>
                                </div>

                                <section>
                                    <div class="inline-group">
                                        <label class="radio">
                                            @Html.RadioButtonFor(m => m.IsAllowAppointment, true,
                                                new { @type = "radio", @name = "radio-inline", @checked = "checked" })
                                            <i></i>Cho phép đăng ký khám trực tuyến
                                        </label>
                                        <label class="radio">
                                            @Html.RadioButtonFor(m => m.IsAllowAppointment, false,
                                                new { @type = "radio", @name = "radio-inline" })
                                            <i></i>Không có dịch vụ đăng ký khám trực tuyến
                                        </label>
                                    </div>
                                </section>

                            </fieldset>

                            <fieldset>
                                <legend>Địa chỉ</legend>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-building"></i>
                                            @Html.TextBoxFor(m => m.LocationAddress, new { @placeholder = "Số địa chỉ" })
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-truck"></i>
                                            @Html.TextBoxFor(m => m.StreetAddress, new { @placeholder = "Tên đường" })
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-4">
                                        <label class="select">
                                            <i></i>
                                            @Html.DropDownListFor(m => m.CityID, (SelectList)ViewBag.CityList,
                                                Constants.RequireCity, new { @class = "form-control" })
                                            @Html.TextBoxFor(m => m.CityName, new { @type = "hidden" })
                                        </label>
                                    </section>
                                    <section class="col col-4">
                                        <label class="select">
                                            <i></i>
                                            @Html.DropDownListFor(m => m.DistrictID, (SelectList)ViewBag.DistrictList,
                                                Constants.RequireDistrict, new { @class = "form-control" })
                                            @Html.TextBoxFor(m => m.DistrictName, new { @type = "hidden" })
                                        </label>
                                    </section>
                                    <section class="col col-4">
                                        <label class="select">
                                            <i></i>
                                            @Html.DropDownListFor(m => m.WardID, (SelectList)ViewBag.WardList,
                                                Constants.RequireWard, new { @class = "form-control" })
                                            @Html.TextBoxFor(m => m.WardName, new { @type = "hidden" })
                                        </label>
                                    </section>
                                </div>
                                @Html.TextBoxFor(m => m.Coordinate, new { @type = "hidden" })
                            </fieldset>

                            <fieldset>
                                <legend>Thông tin liên lạc</legend>
                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-phone"></i>
                                            @Html.TextBoxFor(m => m.PhoneNo, new { @placeholder = "Nhập số điện thoại" })
                                        </label>
                                        <p class="note"><strong>Lưu ý:</strong> Các số điện thoại cách nhau bằng dấu ','</p>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-globe"></i>
                                            @Html.TextBoxFor(m => m.Website, new { @placeholder = "Nhập trang web của bệnh viện" })
                                        </label>
                                    </section>
                                </div>

                                <div class="row">
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-envelope"></i>
                                            @Html.TextBoxFor(m => m.Email, new { @placeholder = "Nhập địa chỉ hộp thư điện tử" })
                                        </label>
                                    </section>
                                    <section class="col col-6">
                                        <label class="input">
                                            <i class="icon-prepend fa fa-fax"></i>
                                            @Html.TextBoxFor(m => m.Fax, new { @placeholder = "Nhập số fax" })
                                        </label>
                                    </section>
                                </div>
                            </fieldset>

                            
                            
                            <footer>
                                <button class="btn" type="reset">
                                    <i class="fa fa-save"></i>&nbsp;
                                    Nhập lại
                                </button>
                                <button class="btn btn-primary" type="submit" id="confirm-button">
                                    <i class="fa fa-save"></i>&nbsp;
                                    Xác nhận
                                </button>
                            </footer>
                        }
                    </div>
                    <!-- end widget content -->
                </div>
                <!-- end widget div -->
            </div>
            <!-- end widget -->
        </article>
        <!-- WIDGET END -->
    </div>
    <!-- end row -->
</section>
<!-- end widget grid -->

<script type="text/javascript">

    $(document).ready(function () {
        @*Format textbox data*@
        $(function ($) {
            $('#OrdinaryTime').mask('99:99 - 99:99', { placeholder: "x" });
            $('#HolidayTime').mask('99:99 - 99:99', { placeholder: "x" });
        });

        @*Take text value of hospital type drop down list*@
        $("#HospitalTypeID").change(function () {
            $('#HospitalTypeName').val($("#HospitalTypeID option:selected").text());
        });


        @*AJAX for cascading District drop down list*@
        $("#CityID").change(function () {
            $('#CityName').val($("#CityID option:selected").text());
            var selectedItem = $(this).val();
            var ddlDistrict = $("#DistrictID");
            var statesProgress = $("#states-loading-district-progress");
            statesProgress.show();
            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl(Constants.GetDistrictByCityAction))",
                data: { "cityId": selectedItem },
                success: function (data) {
                    ddlDistrict.html('');
                    $.each(data, function (id, option) {
                        ddlDistrict.append($('<option></option>').val(option.id).html(option.name));
                    });
                    statesProgress.hide();
                    $('#DistrictName').val($("#DistrictID option:selected").text());

                    selectedItem = $("#DistrictID").val();
                    var ddlWard = $("#WardID");
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: "@(Url.RouteUrl(Constants.GetWardByDistrictAction))",
                        data: { "districtId": selectedItem },
                        success: function (data) {
                            ddlWard.html('');
                            $.each(data, function (id, option) {
                                ddlWard.append($('<option></option>').val(option.id).html(option.name));
                            });
                            statesProgress.hide();
                            $('#WardName').val($("#WardID option:selected").text());
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            statesProgress.hide();
                        }
                    });
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    statesProgress.hide();
                }
            });
        });

        @*AJAX for cascading Ward drop down list*@
        $("#DistrictID").change(function () {
            var selectedItem = $(this).val();
            var ddlWard = $("#WardID");
            var statesProgress = $("#states-loading-district-progress");
            statesProgress.show();

            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.RouteUrl(Constants.GetWardByDistrictAction))",
                data: { "districtId": selectedItem },
                success: function (data) {
                    ddlWard.html('');
                    $.each(data, function (id, option) {
                        ddlWard.append($('<option></option>').val(option.id).html(option.name));
                    });
                    statesProgress.hide();
                    $('#WardName').val($("#WardID option:selected").text());
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    statesProgress.hide();
                }
            });
        });
    });

    @*Data validation*@
    $(document).ready(function () {
        $('#add-hospital-form').validate({
            // Rules for form validation
            rules: {
                HospitalName: {
                    required: true,
                    minlength: 2,
                    maxlength: 64
                },
                HospitalTypeID: {
                    required: true
                },
                LocationAddress: {
                    required: true,
                    minlength: 1,
                    maxlength: 10
                },
                StreetAddress: {
                    required: true,
                    minlength: 2,
                    maxlength: 32
                },
                CityID: {
                    required: true
                },
                DistrictID: {
                    required: true
                },
                WardID: {
                    required: true
                }
            },

            // Messages for form validation
            messages: {
                HospitalName: {
                    required: '@string.Format(ErrorMessage.CEM001, Constants.HospitalName)',
                    maxlength: '@string.Format(ErrorMessage.CEM002, Constants.HospitalName, 2, 64)'
                },
                HospitalTypeID: {
                    required: '@string.Format(ErrorMessage.CEM011, Constants.HospitalType)'
                },
                LocationAddress: {
                    required: '@string.Format(ErrorMessage.CEM011, Constants.LocationAddress)',
                    maxlength: '@string.Format(ErrorMessage.CEM002, Constants.HospitalName, 1, 10)'
                },
                StreetAddress: {
                    required: '@string.Format(ErrorMessage.CEM011, Constants.StreetAddress)',
                    maxlength: '@string.Format(ErrorMessage.CEM002, Constants.HospitalName, 2, 32)'
                },
                CityID: {
                    required: '@string.Format(ErrorMessage.CEM011, Constants.City)'
                },
                DistrictID: {
                    required: '@string.Format(ErrorMessage.CEM011, Constants.District)'
                },
                Ward: {
                    required: '@string.Format(ErrorMessage.CEM011, Constants.Ward)'
                }
            },

        // Do not change code below
        errorPlacement: function (error, element) {
            error.insertAfter(element.parent());
        }
    });
    });

</script>
