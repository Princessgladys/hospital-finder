@using HospitalF.Constant

@model List<HospitalF.Models.HospitalModel>

@{
    ViewBag.Title = "Thêm bệnh viện từ Excel";
}

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&language=vi&sensor=false"></script>
<script type="text/javascript">
    // Get coordinate from a specific address
    function getCoordinateFromAddress(fulladdress) {
        // Take full address
        var address = fulladdress + ", " + "Việt Nam";
        var geocoder = new google.maps.Geocoder();

        // Query address from Google
        geocoder.geocode({ 'address': address }, function (results, status) {
            // Check if address is understandable
            if (status == google.maps.GeocoderStatus.OK) {

                //// Set coordinate value
                //var currentCoordinate = results[0].geometry.location.lat().toFixed(6) +
                //    ", " + results[0].geometry.location.lng().toFixed(6);
                //$('#Coordinate').val(currentCoordinate);
                return results[0].geometry.location.lat().toFixed(6) +
                    ", " + results[0].geometry.location.lng().toFixed(6);
            }
        }, 2000);
        return false;
    }
</script>

<div class="row">
    <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
        <h1 class="page-title txt-color-blueDark">
            <i class="fa fa-pencil-square-o fa-fw "></i>
            Thêm mới bệnh viện
            <span>
                > Từ Excel
            </span>
        </h1>
    </div>
</div>

<div class="alert alert-block alert-info">
    <h4 class="alert-heading"><i class="fa fa-check-square-o"></i>&nbsp;Tải danh sách bệnh viện</h4>
    <p>Chọn tập tin <code>Excel</code> chứa thông tin bệnh viện. Sau khi kiếm tra kỹ thông tin, ấn <code>Xác nhận</code> để hoàn tất.</p>
</div>

@using (Html.BeginForm(Constants.ImportExcelAction, Constants.HospitalController, FormMethod.Post, new { @id = "import-form", @enctype = "multipart/form-data" }))
{
    <section id="widget-grid" class="">
        <div class="alert alert-danger fade in" style="display: none;"
             id="error-alert">
            <button class="close" data-dismiss="alert">
                ×
            </button>
            <i class="fa-fw fa fa-times"></i>
            <strong>Lỗi!</strong> Thao tác không thành công. Xin vui lòng thử lại.
        </div>
        <div class="alert alert-success fade in" style="display: none;"
             id="success-alert">
            <button class="close" data-dismiss="alert">
                ×
            </button>
            <i class="fa-fw fa fa-check"></i>
            <strong>Thành công</strong> Thêm mới bệnh viện thành công.
        </div>

        <div class="form-group">
            <table border="0">
                <tr>
                    <td>
                        <input type="file" class="btn btn-default" name="file" id="file">
                        <img src="../Content/img/Status/Valid.ico" class="resizeIcon"
                             style="display: none;" id="validFileIcon">
                        <img src="../Content/img/Status/Invalid.ico" class="resizeIcon"
                             style="display: none;" id="invalidFileIcon">
                        <span id="file-message"></span>
                    </td>
                    <td>&nbsp;</td>
                    <td style="position: absolute;">
                        <button class="btn btn-sm btn-success btn-next" type="submit"
                                name="@Constants.Button" id="@Constants.ButtonUpload"
                                value="@Constants.ButtonUpload">
                            <i class="fa fa-cloud-upload"></i>&nbsp;Tải danh sách
                        </button>
                    </td>
                </tr>
            </table>
        </div>
    </section>
}

@using (Html.BeginForm(Constants.ImportExcelAction, Constants.HospitalController, FormMethod.Post, new { @id = "import-form", @class = "smart-from" }))
{
<!-- widget grid -->
<section id="data-table" class="">
    <!-- row -->
    <div class="row">
        <!-- NEW WIDGET START -->
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-blueLight" id="wid-id-0"
                 data-widget-colorbutton="false"
                 data-widget-editbutton="false"
                 data-widget-togglebutton="false"
                 data-widget-deletebutton="false"
                 data-widget-fullscreenbutton="false"
                 data-widget-custombutton="false"
                 data-widget-collapsed="false"
                 data-widget-sortable="false">

                <header>
                    <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                    <h2>Danh sách dữ liệu</h2>
                </header>
                <!-- widget div-->
                <div>
                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->
                    </div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body">
                        <p>Xác nhận thông tin và bấm <code>Xác nhận</code> để thêm mới danh sách bệnh viện</p>
                        <div class="table-responsive">
                            <table class="table table-bordered tablesorter" id="hospital-table">
                                <thead>
                                    <tr>
                                        <th>Dòng</th>
                                        <th>Tên bệnh viện</th>
                                        <th>Địa chỉ</th>
                                        <th>Loại</th>
                                    </tr>
                                </thead>
                                <tbody id="table-body">
                                    @{
                                        if (Model.Count == 0)
                                        {
                                            <tr>
                                                <td colspan="5">Không có dữ liệu</td>
                                            </tr>
                                        }
                                        else
                                        {
                                            for (int n = 0; n < Model.Count; n++)
                                            {
                                                if (!string.IsNullOrEmpty(Model[n].HospitalName))
                                                {
                                                    @Html.TextBoxFor(m => m[n].HospitalName, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].HospitalID, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].HospitalTypeID, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].HospitalTypeName, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].OrdinaryStartTime, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].HolidayStartTime, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].IsAllowAppointment, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].AverageCuringTime, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].LocationAddress, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].StreetAddress, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].CityID, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].CityName, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].DistrictID, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].DistrictName, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].WardID, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].WardName, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].FullAddress, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].PhoneNo, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].PhoneNo2, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].PhoneNo3, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].Fax, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].HospitalEmail, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].Website, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].SpecialityName, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].ServiceName, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].FacilityName, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].TagsInput, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].Coordinate, new { @type = "hidden" })
                                                    @Html.TextBoxFor(m => m[n].RecordStatus, new { @type = "hidden" })
                                                    <tr>
                                                        <td hidden>@Model[n].HospitalID</td>
                                                        <td hidden>@Model[n].HospitalName</td>
                                                        <td>@Model[n].HospitalID</td>
                                                        <td>
                                                            @Html.ActionLink(@Model[n].HospitalName,
                                                                Constants.UpdateHospitalAction, Constants.HospitalController,
                                                             new { hospitalId = @Model[n].HospitalID }, null)
                                                        </td>
                                                        <td>@Model[n].FullAddress</td>
                                                        <td>@Model[n].HospitalTypeName</td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                            <footer>
                                <button class="btn btn-primary" type="submit" id="confirm-button"
                                        name="@Constants.Button" value="@Constants.ButtonConfirm"
                                        style="float:right;">
                                    <i class="fa fa-save"></i>&nbsp;
                                    Xác nhận
                                </button>
                            </footer>
                        </div>
                    </div>
                    <!-- end widget content -->
                </div>
                <!-- end widget div -->
            </div>
            <!-- end widget -->
        </article>
        <!-- WIDGET END -->
    </div>
</section>
<!-- end widget grid -->
}

<script type="text/javascript">
    @*Display list of hospitals*@
    $(document).ready(function () {
        var numOfRecord = '@Model.Count'
        var addStatus = '@ViewBag.AddStatus'

        if (addStatus == 1) {
            notif({
                msg: "Thêm mới danh sách bệnh viện thành công!",
                type: "success",
                width: 600,
                position: "center",
                fade: true,
                multiline: true
            });
            $('#data-table').hide();
            return false;
        }

        if (numOfRecord > 0) {
            $('#data-table').show();
        }
        else {
            $('#data-table').hide();
        }
    });

    @*Set file message notification*@
    function setFileNotificationMessage(message, mode) {
        if (mode == 1) {
            $("#validFileIcon").show();
            $("#invalidFileIcon").hide();
            $("#file-message").text(message);
            $('#file-message').css('color', 'black');
            $('#file').css('background', '#f0fff0');
            $('#file').css('border-color', '#7DC27D');
        } else {
            $("#validFileIcon").hide();
            $("#invalidFileIcon").show();
            $("#file-message").text(message);
            $('#file-message').css('color', '#D56161');
            $('#file').css('background', '#fff0f0');
            $('#file').css('border-color', '#A90329');
        }
    }

    @*Data validation*@
    $(document).ready(function () {
        $('#UploadFile').click(function (e) {
            var file = $('#file').val()
            if (file.trim() == "") {
                setFileNotificationMessage('Không có tập tin.', 0);
                return false;
            } else {
                if ($('#invalidFileIcon').is(":visible")) {
                    return false;
                } else {
                    $('#import-form').submit();
                }
            }
        });

        $("input:file").change(function () {
            var extension = $('#file').val().split('.').pop().toLowerCase();
            if ($.inArray(extension, ['xls', 'xlsx', 'xlsm']) == -1) {
                setFileNotificationMessage("Tập tin không phù hợp.", 0);
            } else {
                setFileNotificationMessage("Tập tin phù hợp.", 1);
            }
        });
    });

</script>

<style>
    .resizeIcon
    {
        width: 16px;
        height: auto;
    }
</style>