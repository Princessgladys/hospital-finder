@using HospitalF.Constant
@using HospitalF.Models
@model HospitalF.Models.DoctorModel

@{
    ViewBag.Title = "Tìm kiếm bệnh viện - Thêm mới bác sĩ";
    List<Speciality> specialityList = ViewBag.SpecialityList;
    List<SelectListItem> dayTypeList = ViewBag.DayTypeList;
}

@section AddDoctorActive 
{
class="active"
}

@section BreadCrumb 
{
    <ol class="breadcrumb">
        <li>Trang Quản Lý</li>
        <li>Quản Lý Bác Sĩ</li>
        <li>Thêm Mới Bác Sĩ</li>
    </ol>
}

<div class="row">
    <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
        <h1 class="page-title txt-color-blueDark">
            <i class="fa fa-table fa-fw "></i>
            Thêm mới bác sĩ
        </h1>
    </div>
</div>

<div class="alert alert-block alert-info">
    <h4 class="alert-heading"><i class="fa fa-check-square-o"></i>&nbsp;Nhập thông tin</h4>
    <p>
        Điền những thông tin cần thiết vào bản mẫu. Sau đó ấn <code>Xác nhận</code> để tạo bác sĩ mới.
    </p>
</div>

<div id="widget-grid" class="">
    <div class="row">
        <!-- NEW WIDGET START -->
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable">
            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-blueLight" id="wid-id-0"
                data-widget-colorbutton="false"
                data-widget-editbutton="false"
                data-widget-togglebutton="false"
                data-widget-deletebutton="false"
                data-widget-fullscreenbutton="false"
                data-widget-custombutton="false"
                data-widget-collapsed="false"
                data-widget-sortable="false">
                <header>
                    <span class="widget-icon"><i class="fa fa-edit"></i></span>
                    <h2>Thông tin bác sĩ</h2>
                </header>
                <div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body">
                        @using (Html.BeginForm(Constants.UpdateDoctorAction, Constants.HospitalController, FormMethod.Post, new { @class = "smart-form", @id = "updateDoctorForm", @enctype = "multipart/form-data" }))
                        {
                            <fieldset>
                                <legend>Thông tin cơ bản</legend>
                                <div class="col col-6">
                                    <section>
                                        <label class="label">Tên bệnh viện <span style="color: red;">*</span></label>
                                        <label class="input">
                                            <i class="icon-prepend fa fa-hospital-o"></i>
                                            @Html.TextBoxFor(m => m.HospitalName, new { @placeholder = "Tên bệnh viện", @disabled = "disabled" })
                                            @Html.TextBoxFor(m => m.HospitalID, new { @type = "hidden" })
                                            @Html.TextBoxFor(m => m.DoctorID, new { @type = "hidden" })
                                            @Html.TextBoxFor(m => m.UploadedPerson, new { @type = "hidden" })
                                        </label>
                                    </section>

                                    <div class="row">
                                        <section class="col col-4">
                                            <label class="label">Họ <span style="color: red;">*</span></label>
                                            <label class="input">
                                                <i class="icon-prepend fa fa-header"></i>
                                                @Html.TextBoxFor(m => m.LastName, new { @placeholder = "Họ" })
                                            </label>
                                        </section>
                                        <section class="col col-4">
                                            <label class="label">Tên <span style="color: red;">*</span></label>
                                            <label class="input">
                                                <i class="icon-prepend fa fa-header"></i>
                                                @Html.TextBoxFor(m => m.FirstName, new { @placeholder = "Tên" })
                                            </label>
                                        </section>
                                        <section class="col col-4">
                                            <label class="label">Giới tính <span style="color: red;">*</span></label>
                                            <label class="select">
                                                @Html.DropDownListFor(m => m.Gender, (SelectList)ViewBag.GenderTypeList)
                                                <i></i>
                                            </label>
                                        </section>
                                    </div>
                                    <section>
                                        <label class="label">Bằng cấp / Chứng chỉ</label>
                                        <label class="textarea">
                                            <i class="icon-prepend fa fa-graduation-cap"></i>
                                            @Html.TextAreaFor(m => m.Degree, new { @placeholder = "Bằng cấp hoặc chứng chỉ" })
                                        </label>
                                    </section>
                                    <section>
                                        <label class="label">Kinh nghiệm</label>
                                        <label class="textarea">
                                            <i class="icon-prepend fa fa-pencil"></i>
                                            @Html.TextAreaFor(m => m.Experience, new { @placeholder = "Kinh nghiệm" })
                                        </label>
                                    </section>
                                    <div class="form-group">
                                        <label class="label">Chuyên khoa <span style="color: red;">*</span></label>
                                        <select class="select2 select2-offscreen" id="SpecialityList"
                                            multiple="multiple" name="SpecialityList"
                                            style="width: 100%" tabindex="-1">
                                            @if (Model.SpecialityList.Count == 0)
                                            {
                                                foreach (Speciality speciality in specialityList)
                                                {
                                                <option value="@(speciality.Speciality_ID)">@(speciality.Speciality_Name)</option>
                                                }
                                            }
                                            else if (specialityList.Count() == Model.SpecialityList.Count())
                                            {
                                                foreach (Speciality speciality in specialityList)
                                                {
                                                <option value="@(speciality.Speciality_ID)" selected="selected">@(speciality.Speciality_Name)</option>
                                                }
                                            }
                                            else
                                            {
                                                int isInserted = 0;

                                                foreach (Speciality speciality in specialityList)
                                                {
                                                    isInserted = 0;
                                                    foreach (int value in Model.SpecialityList)
                                                    {
                                                        if (speciality.Speciality_ID == value)
                                                        {
                                                <option value="@(speciality.Speciality_ID)" selected="selected">@(speciality.Speciality_Name)</option>
                                                            isInserted = 1;
                                                            break;
                                                        }
                                                    }
                                                    if (isInserted == 0)
                                                    {
                                                <option value="@(speciality.Speciality_ID)">@(speciality.Speciality_Name)</option>
                                                    }
                                                }
                                            }
                                        </select>

                                    </div>
                                    <br />
                                    <div class="form-group">
                                        <label class="label">Lịch làm việc <span style="color: red;">*</span></label>
                                        <select class="select2 select2-offscreen" id="WorkingDay"
                                            multiple="multiple" name="WorkingDay"
                                            style="width: 100%" tabindex="-1">
                                            @if (Model.WorkingDay.Count == 0)
                                            {
                                                foreach (SelectListItem item in dayTypeList)
                                                {
                                                <option value="@(item.Value)">@(item.Text)</option>
                                                }
                                            }
                                            else if (dayTypeList.Count() == Model.WorkingDay.Count())
                                            {
                                                foreach (SelectListItem item in dayTypeList)
                                                {
                                                <option value="@(item.Value)" selected="selected">@(item.Text)</option>
                                                }
                                            }
                                            else
                                            {
                                                int isInserted = 0;

                                                foreach (SelectListItem item in dayTypeList)
                                                {
                                                    isInserted = 0;
                                                    foreach (int value in Model.WorkingDay)
                                                    {
                                                        if (item.Value.Equals(value.ToString()))
                                                        {
                                                <option value="@(item.Value)" selected="selected">@(item.Text)</option>
                                                            isInserted = 1;
                                                            break;
                                                        }
                                                    }
                                                    if (isInserted == 0)
                                                    {
                                                <option value="@(item.Value)">@(item.Text)</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                    <br />
                                </div>

                                <div class="col col-6">
                                    <section>
                                        <label class="label">Ảnh đại diện</label>
                                        <label for="file" class="input input-file">
                                            <div class="button">
                                                <input id="avatar" type="file" name="file">Duyệt
                                            </div>
                                            <input type="text" placeholder="Chọn ảnh đại diện..." readonly="" value="@(Model.PhotoFilePath)">
                                        </label>
                                    </section>
                                    <div id="holder">
                                        <img src="@(Model.PhotoFilePath)"/>
                                    </div>
                                    <div class="text-center">
                                        <strong class="txt-color-blue">Xem trước ảnh đại diện</strong>
                                    </div>
                                </div>
                            </fieldset>
                            <footer>
                                <button class="btn" type="reset"
                                    id="reset-button">
                                    <i class="fa fa-refresh"></i>&nbsp;
                                    Nhập lại
                                </button>
                                <button class="btn btn-primary" type="submit" id="confirm-button">
                                    <i class="fa fa-save"></i>&nbsp;
                                    Xác nhận
                                </button>
                            </footer>
                        }
                    </div>
                </div>
            </div>
        </article>
    </div>
    </section>

    <style type="text/css">
        #holder
        {
            position: relative;
            border: 1px solid black;
            width: 150px;
            height: 150px;
            overflow: hidden;
            margin: 0 auto;
        }

            #holder img
            {
                position: absolute;
                top: 0px;
                left: 0px;
                cursor: move;
            }
    </style>

    <script type="text/javascript">
        function setNotification(message, type) {
            // Success
            if (type == 1) {
                notif({
                    msg: message,
                    type: "success",
                    width: 600,
                    position: "center",
                    fade: true,
                    multiline: true
                });
            }

            // Warning
            if (type == 2) {
                notif({
                    msg: message,
                    type: "warning",
                    width: 600,
                    position: "center",
                    fade: true,
                    multiline: true
                });
            }

            // Error
            if (type == 3) {
                notif({
                    msg: message,
                    type: "error",
                    width: 600,
                    position: "center",
                    fade: true,
                    multiline: true,
                    time: 1000
                });
            }
        }
        var upload = document.getElementById('avatar'),
        holder = document.getElementById('holder')

        if (typeof window.FileReader === 'undefined') {

        } else {
            upload.onchange = function (e) {
                this.parentNode.nextSibling.nextSibling.value = this.value;
                e.preventDefault();

                var file = upload.files[0],
                    reader = new FileReader();
                reader.onload = function (event) {
                    var img = new Image();
                    img.src = event.target.result;
                    // note: no onload required since we've got the dataurl...I think! :)

                    holder.innerHTML = '';
                    holder.appendChild(img);

                    var el = document.getElementById('holder').firstChild;
                    var parent = el.parentNode;
                    var leftEdge = parent.clientWidth - el.clientWidth;
                    var topEdge = parent.clientHeight - el.clientHeight;
                    var dragObj = new dragObject(el, null,
                        new Position(leftEdge, topEdge), new Position(0, 0));
                };
                reader.readAsDataURL(file);

                return false;
            };


        }

        $('#updateDoctorForm').validate({
            // Rules for form validation
            rules: {
                FirstName: {
                    required: true,
                    maxlength: 32
                },
                LastName: {
                    required: true,
                    maxlength: 32
                },
                Degree: {
                    maxlength: 1000
                },
                Experience: {
                    maxlength: 1000
                }
            },

            // Messages for form validation
            messages: {
                FirstName: {
                    required: '@string.Format(ErrorMessage.CEM001, Constants.HospitalName)',
                    maxlength: '@string.Format(ErrorMessage.CEM003, Constants.HospitalName, 32)'
                },
                LastName: {
                    required: '@string.Format(ErrorMessage.CEM001, Constants.HospitalName)',
                    maxlength: '@string.Format(ErrorMessage.CEM003, Constants.HospitalName, 32)'
                },
                Degree: {
                    maxlength: '@string.Format(ErrorMessage.CEM003, Constants.HospitalName, 1000)'
                },
                Experience: {
                    maxlength: '@string.Format(ErrorMessage.CEM003, Constants.HospitalName, 1000)'
                },
            },

            // Do not change code below
            errorPlacement: function (error, element) {
                error.insertAfter(element.parent());
            }
        });

        $(document).ready(function () {
            pageSetUp();
            var updateDoctorStatus = '@(ViewBag.UpdateDoctorStatus)';
            if (updateDoctorStatus) {
                if (updateDoctorStatus == 'True') {
                    setNotification('Thông tin bác sĩ được cập nhật thành công.', 1);
                } else {
                    setNotification('Đã có lỗi xảy ra. Vui lòng thử lại.', 3);
                }
            }
        });
    </script>
